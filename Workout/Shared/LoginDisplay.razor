@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        <a href="" class="btn btn-link" title="@context.User.Identity?.Name" @onclick="BeginLogOut">Logout</a>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login" class="btn btn-link" title="Login om voortgang automatisch op te slaan">
            Login
        </a>
    </NotAuthorized>
    <Authorizing>
        <a href="authentication/login" class="btn btn-link" title="Login om voortgang automatisch op te slaan">
            Login
        </a>
    </Authorizing>
</AuthorizeView>

@code{
    // Let op: de silentlogin van de OidcAuthentication via AuthenticationService.js gaat gelijk af nadat blazor geladen is.
    // Hierdoor wordt gelijk de html in Authorizing getoont. Na een paar seconden is die klaar en ben je niet ingelogd,
    // dus dan wordt de html in NotAuthorized getoont. De html is gelijk zodat de gebruiker hier niks van merkt.

    private void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }
}
