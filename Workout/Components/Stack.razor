<div class="stack @Class" style="@Style">
    @ChildContent
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; } = null!;
    [Parameter] public JustifyContent Justify { get; set; } = JustifyContent.SpaceBetween;
    [Parameter] public AlignItems Align { get; set; } = AlignItems.Center;
    [Parameter] public string? Class { get; set; }

    private string JustifyStyle => "justify-content:" + Justify switch
    {
        JustifyContent.Start => "start",
        JustifyContent.Center => "center",
        JustifyContent.End => "end",
        JustifyContent.SpaceBetween => "space-between",
        JustifyContent.SpaceAround => "space-around",
        JustifyContent.SpaceEvenly => "space-evenly",
        _ => throw new ArgumentOutOfRangeException(nameof(Justify))
    };

    private string AlignStyle => "align-items:" + Align switch
    {
        AlignItems.Baseline => "baseline",
        AlignItems.Center => "center",
        AlignItems.Start => "start",
        AlignItems.End => "end",
        AlignItems.Stretch => "stretch",
        _ => throw new ArgumentOutOfRangeException(nameof(Align))
    };

    private string Style => $"display: flex; {JustifyStyle}; {AlignStyle};";

    public enum JustifyContent
    {
        Start,
        Center,
        End,
        SpaceBetween,
        SpaceAround,
        SpaceEvenly,
    }

    public enum AlignItems
    {
        Baseline,
        Center,
        Start,
        End,
        Stretch
    }
}